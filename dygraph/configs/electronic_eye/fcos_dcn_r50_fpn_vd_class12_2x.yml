architecture: FCOS
pretrain_weights: https://paddledet.bj.bcebos.com/models/pretrained/ResNet50_vd_pretrained.pdparams
load_static_weights: True
weights: output/fcos_dcn_r50_fpn_vd_class12_2x/model_final

use_gpu: true
log_iter: 20
save_dir: output
snapshot_epoch: 6

FCOS:
  backbone: ResNet
  neck: FPN
  fcos_head: FCOSHead
  fcos_post_process: FCOSPostProcess

ResNet:
  # index 0 stands for res2
  depth: 50
  variant: d
  norm_type: bn
  freeze_at: 0
  return_idx: [1,2,3]
  num_stages: 4
  dcn_v2_stages: [1,2,3]

FPN:
  out_channel: 256
  spatial_scales: [0.125, 0.0625, 0.03125]
  extra_stage: 2
  has_extra_convs: true
  use_c5: false

FCOSHead:
  fcos_feat:
    name: FCOSFeat
    feat_in: 256
    feat_out: 256
    num_convs: 4
    norm_type: "gn"
    use_dcn: true
  num_classes: 3
  fpn_stride: [8, 16, 32, 64, 128]
  prior_prob: 0.01
  fcos_loss: FCOSLoss
  norm_reg_targets: true
  centerness_on_reg: true

FCOSLoss:
  loss_alpha: 0.25
  loss_gamma: 2.0
  iou_loss_type: "giou"
  reg_weights: 1.0

FCOSPostProcess:
  decode:
    name: FCOSBox
    num_classes: 3
  nms:
    name: MultiClassNMS
    nms_top_k: 1000
    keep_top_k: 100
    score_threshold: 0.025
    nms_threshold: 0.6

metric: COCO
num_classes: 3
TrainDataset:
  !COCODataSet
    image_dir: train
    anno_path: annotations/train_new.json
    dataset_dir: D:\PaddleDataset
    data_fields: ['image', 'gt_bbox', 'gt_class', 'is_crowd']

EvalDataset:
  !COCODataSet
    image_dir: val
    anno_path: annotations/val.json
    dataset_dir: D:\PaddleDataset

epoch: 24
LearningRate:
  base_lr: 0.00125
  schedulers:
  - !PiecewiseDecay
    gamma: 0.1
    milestones: [19, 23]
  - !LinearWarmup
    start_factor: 0.3333333333333333
    steps: 500

OptimizerBuilder:
  optimizer:
    momentum: 0.9
    type: Momentum
  regularizer:
    factor: 0.0002
    type: L2

worker_num: 2
TrainReader:
  sample_transforms:
  - Decode: {}
  - RandomFlip: {prob: 0.6}
  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  - RandomResize: {target_size: [[640, 1333], [672, 1333], [704, 1333], [736, 1333], [768, 1333], [800, 1333]], keep_ratio: true, interp: 1}
  - Permute: {}
  batch_transforms:
  - PadBatch: {pad_to_stride: 128}
  - Gt2FCOSTarget:
      object_sizes_boundary: [64, 128, 256, 512]
      center_sampling_radius: 1.5
      downsample_ratios: [8, 16, 32, 64, 128]
      norm_reg_targets: True
  batch_size: 4
  shuffle: true
  drop_last: true

EvalReader:
  sample_transforms:
  - Decode: {}
  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  - Resize: {interp: 1, target_size: [800, 1333], keep_ratio: True}
  - Permute: {}
  batch_transforms:
  - PadBatch: {pad_to_stride: 128}
  batch_size: 1
  shuffle: false

TestReader:
  sample_transforms:
  - Decode: {}
  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  - Resize: {interp: 1, target_size: [800, 1333], keep_ratio: True}
  - Permute: {}
  batch_transforms:
  - PadBatch: {pad_to_stride: 128}
  batch_size: 1
  shuffle: false